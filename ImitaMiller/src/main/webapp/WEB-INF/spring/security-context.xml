<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd">
	
    <context:component-scan base-package="com.imitamiller"/>
    
    <!-- Spring Security 설정 -->
    <security:http auto-config="true" use-expressions="true">
    	<!-- CSRF 토큰 활성화 (기본적으로 활성화되어 있음) -->
    	<security:csrf />
    	
    	<!-- 인증이 필요한 URL 설정 -->
        <security:intercept-url pattern="/main.shop" access="permitAll" />
        <security:intercept-url pattern="/login.shop" access="permitAll" />
        <security:intercept-url pattern="/logout.shop" access="permitAll" />
        
        
        <!-- 예: /public/** 경로에 대한 설정 -->
   	 	<security:intercept-url pattern="/public/**" access="permitAll" />
        
        <!-- 로그인 페이지 설정 -->
        <security:form-login login-page="/login.shop" 
        							default-target-url="/main.shop" 
        							authentication-failure-url="/login.shop?error=true"/>
        
        <!-- 로그아웃 페이지 설정 -->
        <security:logout logout-success-url="/logout.shop" />
        
        <!-- 특정 URL에서 CSRF 보호 비활성화 -->
    	<security:csrf disabled="true" />
    </security:http>
    
	<!-- 사용자 인증 제공자 설정 -->
    <security:authentication-manager>
        <security:authentication-provider>
            <security:jdbc-user-service data-source-ref="dataSource"
                users-by-username-query="SELECT id, pwd, 1 as enabled FROM memlogin WHERE id = ?"
                authorities-by-username-query="SELECT id, 'ROLE_USER' as authority FROM memlogin WHERE id = ?" />
        </security:authentication-provider>
        <security:authentication-provider>
            <security:jdbc-user-service data-source-ref="dataSource"
                users-by-username-query="SELECT id, pwd, 1 as enabled FROM manager WHERE id = ?"
                authorities-by-username-query="SELECT id, 'ROLE_ADMIN' as authority FROM manager WHERE id = ?" />
        </security:authentication-provider>
    </security:authentication-manager>
    
    <!-- Exception handling configuration -->
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
             <props>
                    <prop key="java.lang.Exception">error</prop>
             </props>
        </property>
	</bean>
	
	<!-- 패스워드 암호화 및 복호화를 위한 bcryptPasswordEncoder 빈 정의 -->
	<bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
	
	<!-- 예외페이지 작성했을때 처리해주는 빈즈클래스 등록
     SimpleMappingExceptionResolver ->웹상에서 에러가 발생->개발자가 작성한 예외처리
     페이지를 출력시켜준다.
     <props>
                    <prop key="java.lang.Exception(발생한 예외처리클래스명)">예외처리페이지명</prop>
     </props>
     -->
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
             <props>
                    <prop key="java.lang.Exception">error</prop>
             </props>
        </property>
    </bean>
    
    <!-- 데이터 소스 참조 -->
	<bean id="dataSource" 
	   class="org.springframework.jdbc.datasource.DriverManagerDataSource">
	   <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
	   <property name="url" value="jdbc:oracle:thin:@localhost:1521:orcl" />
	   <property name="username" value="imita" />
	   <property name="password" value="imita" />
	</bean>

</beans>
